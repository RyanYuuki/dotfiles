(defwidget theme_switcher []
  (box :orientation "v"
    :space-evenly "false"
    :class "theme_switcher"
    (theme_switch)
    )
)

(defwidget playerctl []
  (box :orientation "v"
    :space-evenly "false"
    :halign "center"
    :valign "center"
    :width 390
    :class "music"
    (music_title)
    (music)
    (music_art)
    (music_controls)
    (volume_slider)
    (pulseaudio_eq)
    )
  )

(defwidget stats []
  (box :orientation "v"
    :space-evenly false
    ; :halign "center"
    ; :valign "center"
    :width 390
    :class "stats"
    (stats_title)
  (box :orientation "h"
    :space-evenly false
    :halign "center"
    :spacing 20
    :class "stats"
    (ram-circular)
    (cpu-circular)
    )
  )
)

(defwidget stats_title []
  (box 
    :orientation "h"
    :spacing 0
    (label 
      :text "Resources"
      :class "statsTitle"
      )
    )
  )

(defwidget radialmeter [value text ?class ?labelclass]
    (circular-progress :value value
        :class "radial ${class}"
        :start-angle 0
        :thickness 12
        (label :text text
            :class "radial-label ${labelclass}"
            :limit-width 2
            :show_truncated false
            :wrap false
            :angle 0.0)))

(defpoll ramUsage :interval "1s" "scripts/getRam")
(defpoll cpuUsage :interval "1s" "scripts/getCpu")

(defwidget ram-circular []
  (box 
    :spacing 0
    :orientation "h"
    :space-evenly false
    :halign "center"
    (box 
      :spacing 0
      :orientation "h"
      :space-evenly false
      :class "ram"
      :halign "center"
      :tooltip "Usage: ${ramUsage}%"
  (radialmeter
    :value ramUsage
    :text " "
    :labelclass "ram-label"
    :class "ram-circle"
      )
    )
  )
)

(defwidget cpu-circular []
  (box 
    :spacing 0
    :orientation "h"
    :space-evenly false
    :halign "center"
    (box 
      :spacing 0
      :orientation "h"
      :space-evenly false
      :halign "center"
      :class "cpu"
      :tooltip "Usage: ${cpuUsage}%"
  (radialmeter
    :value cpuUsage
    :text " "
    :labelclass "cpu-label"
    :class "cpu-circle"
      )
    )
  )
)

(deflisten vol "scripts/volume.sh --vol")
(defpoll vol_percentage :interval "0.1s" "scripts/volume.sh --percentage")

(defwidget volume_slider []
  (box :orientation "h"
    :class "volume-main"
    :space-evenly "false"
    :halign "center"
    (label :class "vol_percentage" 
           :text "${vol_percentage} ")
    (scale :class "volume-slider"
      :value {vol == "" ? 0 : vol}
      ; :value vol
      :orientation "h"
      :width 260
      :max 101
      :min 0
      :marks true
      :onchange "scripts/volume.sh set {}")
  ))

(defpoll SWITCH_THEME :interval "1s" "~/.config/bspwm/apps/eww/theme_switcher/scripts/watch_theme")
(defpoll music :interval "0.1s" "scripts/player.sh --song_name")
(defpoll art :interval "1s" "scripts/player.sh --song_art")
(defpoll song_art :interval "1s" "scripts/player.sh --get_song_art")
(defpoll song_status :interval "0.5s" "scripts/player.sh --status_icon")

(defwidget pulseaudio_eq []
  (box 
    :orientation "h"
    :class "pulseaudio_eq"
    :space-evenly "false"
    :halign "center"
    :valign "center"
  (button
    :onclick "pulseaudio-equalizer toggle"
    "Toggle EQ"
    )
  )
)

(defwidget music_controls []
 (box 
   :orientation "h"
   :class "music_controls"
   :space-evenly "true"
   ; :spacing 30
   :halign "center"
   :valign "center"
   :hexpand "false"
   :vexpand "false"
   (button :class "previous_btn" :onclick "playerctl previous" "ﭢ")
   (button :class "toggle_play" :onclick "playerctl play-pause" song_status)
   (button :class "next_btn" :onclick "playerctl next" "ﭠ ")
   ) 
)

(defwidget music_art []
  (box :orientation "v"
    :space-evenly "false"
    :valign "center"
    :halign "center"
    ; :vexpand "true"
    ; :hexpand "true"
    :class "music_art"
    :width 100
    :height 330
    :style "background-image: url('${art}')"
    song_art
    )
  )

(defwidget music_title []
  (box :orientation "v"
    :space-evenly "false"
    (label 
      :text "Now Playing"
      :class "music_title"
      )
  )
)

(defwidget music []
  (label 
    :text "${music}"
    :class "music_label"
    :limit-width 20
    ; :height 200
    ; :width 390
  )
)

(defwidget theme_switch []
  (box
    :orientation "v"
     (label :text "Theme Switcher" :class "title")
  (box
    :orientation "v"
    :space-evenly "false"
    (button
      :class "switch_theme_btn"
      :onclick "~/.config/bspwm/apps/eww/theme_switcher/scripts/switch_theme"
      "Catppuccin ${SWITCH_THEME}"
      )
    )
  )
)

(defwindow resourceUsage
  :monitor 0
  :geometry (geometry :x "13"
                      :y "900"
                      ; :width "10%"
                      ; :height "10%"
                      :anchor "top left")
  :windowtype "dock"
  :wm-ignore true
  (stats))

(defwindow music
  :monitor 0
  :geometry (geometry :x "13"
                      :y "280"
                      ; :width "10%"
                      ; :height "10%"
                      :anchor "top left")
  :windowtype "dock"
  :wm-ignore true
  (playerctl))

(defwindow theme_switcher
    :monitor 0
    :geometry (geometry :x "13"
                        :y "80"
                        ; :height "30%"
                        ; :width "15%"
                        :anchor "top left")
    :windowtype "dock"
    :wm-ignore true
(theme_switcher))
